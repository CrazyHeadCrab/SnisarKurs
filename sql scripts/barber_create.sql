go
if exists (select * from sys.databases where name = 'barber') 
drop database barber
go
go
create database barber
ON PRIMARY 
( NAME= SnisarDate,FILENAME= "D:\databases\barberdate.mdf", SIZE=3 MB, MAXSIZE=100, FILEGROWTH=10) 
LOG ON 
(NAME=Snisarlog,FILENAME= "D:\databases\barberslog.mdf", SIZE=3MB, MAXSIZE=100, FILEGROWTH=10) 
go
go
use barber

create table log_pass
(
log_pass_id int not null,
logn nvarchar(20) not null Unique,
pass nvarchar(20) not null,
income_lvl char(1) not null check (income_lvl like ('[ABC]')),
primary key(log_pass_id)
)


create table client
(
client_id int not null ,
cl_name nchar(20) not null,
cl_surname nchar(20) not null,
cl_patronic nchar(20) null,
cl_email char(30)  null check (cl_email like('%@%.%')),
cl_phone char(12)  null check (cl_phone like('+7[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')),
log_pass_id int not null,
primary key(client_id),
foreign key (log_pass_id) references log_pass(log_pass_id)
)
create table town
(
town_id int not null ,
town_name nchar(30) not null,
primary key (town_id)
)
create table branch
(
branch_id int not null ,
town_id int not null,
br_address nchar(80) null,
primary key (branch_id),
foreign key(town_id) references town(town_id)
)
create table post
(
post_id int not null ,
post_name nchar(50) not null,
salary money not null,
primary key (post_id)
)
create table employer
(
employer_id int not null ,
emp_name nchar(20) not null,
emp_surname nchar(20) not null,
emp_patronic nchar(20) null,
branch_id int not null,
post_id int not null,
log_pass_id int not null,

primary key (employer_id),
foreign key (branch_id) references branch(branch_id),
foreign key (post_id) references post(post_id),
foreign key (log_pass_id) references log_pass(log_pass_id)
)
create table srvice
(
srvice_id int not null ,
srvice_name nchar(50) not null,
srvice_cost money not null,
srvice_duration int null,
primary key (srvice_id)
)
create table record
(
record_id int not null ,
client_id int not null,
record_date date not null,
branch_id int not null,
start_time time not null,
srvice_id int not null ,
employer_id int not null ,
primary key (record_id),
foreign key (client_id) references client(client_id),
foreign key (branch_id) references branch(branch_id),
foreign key (srvice_id) references srvice(srvice_id),
foreign key (employer_id) references employer(employer_id),
)
create table post_srvice
(
post_id int not null,
srvice_id int not null ,
primary key (post_id, srvice_id),
foreign key (post_id) references post(post_id),
foreign key (srvice_id) references srvice(srvice_id),
)

create table schedule
(
employer_id int not null ,
day_num int not null  check (day_num >= 1 and day_num <=7),
time_start time not null,
time_end time not null
primary key(employer_id, day_num),
foreign key (employer_id) references employer(employer_id)
)



create table times
(
val time not null,
primary key (val)
)
go
go
use barber

insert into  log_pass
	values  (1, 'wex', '123', 'B'),
			(2, 'exort', '123', 'B'),
			(3, 'qwas', '123', 'B'),
			(4, 'blast', '123', 'B'),
			(5, 'kotleta', '123', 'B'),
			(6, 'tornado', '123', 'B'),
			(7, 'inviz', '123', 'B'),
			(8, 'cold', '123', 'B'),
			(9, 'alacriti', '123', 'B'),
			(10, 'manableed', '123', 'B'),
			(11, 'invoker', '123', 'B'),
			(12, 'sunstrike', '123', 'B'),
			(13, 'oganim', '123', 'B'),
			(14, 'midas', '123', 'B'),
			(15, 'hex', '123', 'B'),
			(16, 'phase', '123', 'B'),
			(17, 'blink', '123', 'B'),
			(18, 'satanic', '123', 'B'),
			(19, 'tangusi', '123', 'B'),
			(20, 'null', '123', 'B'),
			(21, 'amulet', '123', 'C'),
			(22, 'sasha', '123', 'C'),
			(23, 'ysha', '123', 'C'),
			(24, 'Kya', '123', 'C'),
			(26, 'maddnes', '123', 'C'),
			(25, 'meteor', '123', 'C'),
			(27, 'blade', '123', 'C'),
			(28, 'mail', '123', 'C'),
			(29, 'flasca', '123', 'C'),
			(30, 'force', '123', 'C'),
			(31, 'stuffic', '123', 'C'),
			(32, 'crystaliz', '123', 'C'),
			(33, 'daydalus', '123', 'C'),
			(34, 'Axe', '123', 'C'),
			(35, 'bloodtorn', '123', 'C'),
			(36, 'celesta', '123', 'C'),
			(37, 'mount', '123', 'C'),
			(38, 'medalin', '123', 'C'),
			(39, 'mango', '123', 'C'),
			(40, 'gem', '123', 'C'),
			(41, 'kokos', '123' ,'A')
		

insert into town
	values  (1,'Ìîñêâà'),
			(2,'Ñàíêò-Ïèòåğáóğã'),
			(3,'Âîğîíåæ'),
			(4,'Íîâãîğîä'),
			(5,'Íîâîñèáèğñê')

insert into branch
	values  (1,1,'óë. Êóòóçîâà, äîì 15'),
			(2,1,'óë. Ñåğïîâà, äîì 3'),
			(3,2,'óë. Êâàäğàòíàÿ, äîì 9'),
			(4,2,'óë. Ëåíèíà, äîì 31'),
			(5,3,'óë. Âåğõíåÿ, äîì 1'),
			(6,3,'óë. Äâàäöàòü ïåğâîãî âåêà, äîì 21'),
			(7,4,'óë. Ãîğîäíè÷åãî, äîì 6'),
			(8,4,'óë. Ïàõàğÿ, äîì 11'),
			(9,5,'óë. Çàâîäñêàÿ, äîì 32'),
			(10,5,'óë. Äèîãåíñêàÿ, äîì 19')
insert into post
	values  (1,'Ïàğèêìàõåğ',20000),
			(2,'Âèçàæèñò',15000),
			(3,'Óíèâåğñàëüíûé ğàáîòíèê',30000),
			(4,'Ìàññàæèñò',30000),
			(5,'Ìàñòåğ íîãòåâîãî Ñåğâèñà',25000),
			(6,'Ìåíåäæåğ',100000)

insert into employer
	values  (1,'ßğîñëàâ','Ôóôàåâ','Ñòàíèñëàâîâè÷',1,1,1),
			(2,'Àêèì','Àêèìîâ','Àêèìîâè÷',1,2,2),
			(3,'Âàñèëèé','Ïğîíèí','Âàäèìîâè÷',2,3,3),
			(4,'Ïåòğ','Ïåòğîâ','Âàäèìîâè÷',2,2,4),
			(5,'Èâàí','Ïåòğåíêî','Ïåòğîâè÷',3,1,5),
			(6,'Ãàëèíà','Äóáîâà','Èâàíîâíà',3,2,6),
			(7,'Åâãåíèé','Áàáè÷åâ','Èâàíîâè÷',4,1,7),
			(8,'Äìèòğèé','Íàãàåâ','Èâàíîâè÷',4,1,8),
			(9,'Îëüãà','Ñåìåíîâà','Åâãåíüåâíà',5,3,9),
			(10,'Ïàâåë','Ñèäîğîâ','Èâàíîâè÷',5,3,10),
			(11,'Åâãåíèé','Îâäèåíêî','Èâàíîâè÷',6,2,11),
			(12,'Âàñèëèé','Êóçíåöîâ','Ïàâëîâè÷',6,2,12),
			(13,'Àëåêñàíäğ','Èëüåíêî','Ïàâëîâè÷',7,3,13),
			(14,'Äìèòğèé','Èëüåíêî','Ïàâëîâè÷',7,3,14),
			(15,'Àíàñòàñèÿ','Ãâîçäåâà','Äìèòğèâíà',8,3,15),
			(16,'Ìàêñèì','Íåïîìíÿùèé','Ìàêñèìîâè÷',8,2,16),
			(17,'Äàğüÿ','Ğîçàòêîâà','Îëåãîâíà',9,3,17),
			(18,'Ìàğèÿ','Äüÿêîâíà','Àëåêñàíäğîâíà',9,3,18),
			(19,'Àğò¸ì','Ñîáàêîâ','İäóàğäîâè÷',10,1,19),
			(20,'Ñíåæàíà','Ìîğîçîâíà','Êèğèëîâíà',10,2,20),
			(21,'Ìàêñèìèëèàí','Ñíèñàğ','Àíäğååâè÷',10,2,41)

insert into srvice
	values  (1, 'Ìóæñêàÿ ñğèæêà', 1000, 60),
			(2, 'Æåíñêàÿ ñğèæêà', 1200, 60),
			(3, 'Ñğèæêà ìàøèêîé', 500, 30),
			(4, 'ïîêğàñ âîëîñ', 1300, 40),
			(5, 'ìàíèêşğ', 1000, 60),
			(6, 'ïåäèêşğ', 1000, 60),
			(7, 'Ìîäåëèğîâàíèå áîğîäû', 2000, 60),
			(8, 'ñòğèæêà áîğîäû è óñîâ', 1000, 60),
			(9, 'Óêëàäêà âîëîñ', 500, 60),
			(10, 'Ìàêèÿæ', 1500, 60),
			(11, 'Ìàññàæ', 2500, 60)
insert into post_srvice
	values  (1,2),
			(1,1),
			(1,3),
			(1,4),
			(1,7),
			(1,8),
			(1,9),
			(2,10),
			(4,11),
			(5,5),
			(5,6),
			(3,1),
			(3,2),
			(3,3),
			(3,4),
			(3,5),
			(3,6),
			(3,7),
			(3,8),
			(3,9),
			(3,10),
			(3,11)

insert into client(client_id, cl_surname, cl_name, cl_patronic,log_pass_id)
	values  (1,'Îñèïîâà', 'Àííà', 'Şğüåâíà',21),
			(2,'Ñíåãèğåâà','ßíà', 'Èëüèíè÷íà',22),
			(3,'Ïîïîâà', 'Àíàñòàñèÿ', 'Àëåêñàíäğîâíà',23),
			(4,'Òêà÷åâ', 'Ìàêñèì', 'Àğêàäüåâè÷',24),
			(5,'Êîğíååâà', 'Âàğâàğà', 'Ñòåïàíîâíà',25),
			(6,'Åãîğîâà', 'Âåğîíèêà', 'Âëàäèìèğîâíà',26),
			(7,'Êóäğÿâöåâ', 'Èâàí', 'Àğò¸ìîâè÷',27),
			(8,'Íàçàğîâ', 'Ğîìàí', 'Íèêèòè÷',28),
			(9,'Îâ÷èííèêîâ', 'Èâàí', 'Òèìóğîâè÷',29),
			(10,'Ñåğãååâà', 'Ïîëèíà', 'Ìàêàğîâíà',30),
			(11,'Ñèçîâ', 'Àíäğåé', 'Äàíèèëîâè÷',31),
			(12,'Âîëêîâ', 'İìèğ', 'Àëåêñååâè÷',32),
			(13,'Çàéöåâ', 'Ìàğê', 'Ïëàòîíîâè÷',33),
			(14,'Êîğîëåâà', 'ßíà', 'Ìèõàéëîâíà',34),
			(15,'Ïîïîâ', 'Íèêîëàé', 'Äìèòğèåâè÷',35),
			(16,'Àíäğååâà', 'Âàñèëèñà', 'Ãğèãîğüåâíà',36),
			(17,'Ëûêîâà', 'Êñåíèÿ', 'Ìèõàéëîâíà',37),
			(18,'Ìèíèí', 'Íèêîëàé', 'Ìàğêîâè÷',38),
			(19,'Ãğèãîğüåâ', 'Àğò¸ì', 'Àíàòîëüåâè÷',39),
			(20,'Êğàâöîâà', 'Àë¸íà', 'Ìàêñèìîâíà',40)

insert into record
	values  (1,1,DATEADD(month, 1, getdate()),1,'17:00:00',2,1),
			(2,2,DATEADD(day, 7, getdate()),1,'13:00:00',10,2),
			(3,3,DATEADD(day, 13, getdate()),2,'15:00:00',4,3),
			(4,4,DATEADD(day, 15, getdate()),2,'10:00:00',10,4),
			(5,5,DATEADD(day, 2, getdate()),3,'18:00:00',2,5),
			(6,6,DATEADD(day, 1, getdate()),3,'13:00:00',10,6),
			(7,7,DATEADD(day, 3, getdate()),4,'15:00:00',8,7),
			(8,8,DATEADD(day, 5, getdate()),4,'16:00:00',2,8),
			(9,9,DATEADD(day, 7, getdate()),5,'19:00:00',11,9),
			(10,10,DATEADD(day, 2, getdate()),5,'17:00:00',11,10),
			(11,11,DATEADD(day, 6, getdate()),6,'11:00:00',7,11),
			(12,12,DATEADD(month, 1, getdate()),6,'12:00:00',10,12),
			(13,13,DATEADD(day, 9, getdate()),7,'14:00:00',5,13),
			(14,14,DATEADD(day, 6, getdate()),7,'18:00:00',6,14),
			(15,15,DATEADD(day, 8, getdate()),8,'14:00:00',9,15),
			(16,16,DATEADD(day, 13, getdate()),8,'12:00:00',10,16),
			(17,17,DATEADD(day, 11, getdate()),9,'16:00:00',3,17),
			(18,18,DATEADD(month, 1, getdate()),9,'18:00:00',4,18),
			(19,19,DATEADD(day, 5, getdate()),10,'10:00:00',1,19),
			(20,20,DATEADD(day, 1, getdate()),10,'13:00:00',10,20)


insert into schedule
	values  (1,1,'09:00','21:00'),
			(1,2,'09:00','21:00'),
			(1,3,'09:00','21:00'),
			(1,4,'09:00','21:00'),
			(1,5,'09:00','21:00'),
			(1,6,'09:00','21:00'),
			(1,7,'09:00','21:00'),
			(2,1,'09:00','21:00'),
			(2,2,'09:00','21:00'),
			(2,3,'09:00','21:00'),
			(2,4,'09:00','21:00'),
			(2,5,'09:00','21:00'),
			(2,6,'09:00','21:00'),
			(3,1,'09:00','21:00'),
			(3,2,'09:00','21:00'),
			(3,3,'09:00','21:00'),
			(3,4,'09:00','21:00'),
			(3,5,'09:00','21:00'),
			(3,6,'09:00','21:00'),
			(4,1,'09:00','21:00'),
			(4,2,'09:00','21:00'),
			(4,3,'09:00','21:00'),
			(4,4,'09:00','21:00'),
			(4,5,'09:00','21:00'),
			(4,6,'09:00','21:00'),
			(5,1,'09:00','21:00'),
			(5,2,'09:00','21:00'),
			(5,3,'09:00','21:00'),
			(5,4,'09:00','21:00'),
			(5,5,'09:00','21:00'),
			(5,6,'09:00','21:00'),
			(6,1,'09:00','21:00'),
			(6,2,'09:00','21:00'),
			(6,3,'09:00','21:00'),
			(6,4,'09:00','21:00'),
			(6,5,'09:00','21:00'),
			(6,6,'09:00','21:00'),
			(7,1,'09:00','21:00'),
			(7,2,'09:00','21:00'),
			(7,3,'09:00','21:00'),
			(7,4,'09:00','21:00'),
			(7,5,'09:00','21:00'),
			(7,6,'09:00','21:00'),
			(8,1,'09:00','21:00'),
			(8,2,'09:00','21:00'),
			(8,3,'09:00','21:00'),
			(8,4,'09:00','21:00'),
			(8,5,'09:00','21:00'),
			(8,6,'09:00','21:00'),
			(9,1,'09:00','21:00'),
			(9,2,'09:00','21:00'),
			(9,3,'09:00','21:00'),
			(9,4,'09:00','21:00'),
			(9,5,'09:00','21:00'),
			(9,6,'09:00','21:00'),
			(10,1,'09:00','21:00'),
			(10,2,'09:00','21:00'),
			(10,3,'09:00','21:00'),
			(10,4,'09:00','21:00'),
			(10,5,'09:00','21:00'),
			(10,6,'09:00','21:00'),
			(11,1,'09:00','21:00'),
			(11,2,'09:00','21:00'),
			(11,3,'09:00','21:00'),
			(11,4,'09:00','21:00'),
			(11,5,'09:00','21:00'),
			(11,6,'09:00','21:00'),
			(12,1,'09:00','21:00'),
			(12,2,'09:00','21:00'),
			(12,3,'09:00','21:00'),
			(12,4,'09:00','21:00'),
			(12,5,'09:00','21:00'),
			(12,6,'09:00','21:00'),
			(12,7,'09:00','21:00'),
			(13,1,'09:00','21:00'),
			(13,2,'09:00','21:00'),
			(13,3,'09:00','21:00'),
			(13,4,'09:00','21:00'),
			(13,5,'09:00','21:00'),
			(13,6,'09:00','21:00'),
			(13,7,'09:00','21:00'),
			(14,1,'09:00','21:00'),
			(14,2,'09:00','21:00'),
			(14,3,'09:00','21:00'),
			(14,4,'09:00','21:00'),
			(14,5,'09:00','21:00'),
			(14,6,'09:00','21:00'),
			(14,7,'09:00','21:00'),
			(15,1,'09:00','21:00'),
			(15,2,'09:00','21:00'),
			(15,3,'09:00','21:00'),
			(15,4,'09:00','21:00'),
			(15,5,'09:00','21:00'),
			(15,6,'09:00','21:00'),
			(15,7,'09:00','21:00'),
			(16,1,'09:00','21:00'),
			(16,2,'09:00','21:00'),
			(16,3,'09:00','21:00'),
			(16,4,'09:00','21:00'),
			(16,5,'09:00','21:00'),
			(16,6,'09:00','21:00'),
			(16,7,'09:00','21:00'),
			(17,1,'09:00','21:00'),
			(17,2,'09:00','21:00'),
			(17,3,'09:00','21:00'),
			(17,4,'09:00','21:00'),
			(17,5,'09:00','21:00'),
			(17,6,'09:00','21:00'),
			(17,7,'09:00','21:00'),
			(18,1,'09:00','21:00'),
			(18,2,'09:00','21:00'),
			(18,3,'09:00','21:00'),
			(18,4,'09:00','21:00'),
			(18,5,'09:00','21:00'),
			(18,6,'09:00','21:00'),
			(18,7,'09:00','21:00'),
			(19,1,'09:00','21:00'),
			(19,2,'09:00','21:00'),
			(19,3,'09:00','21:00'),
			(19,4,'09:00','21:00'),
			(19,5,'09:00','21:00'),
			(19,6,'09:00','21:00'),
			(19,7,'09:00','21:00'),
			(20,1,'09:00','21:00'),
			(20,2,'09:00','21:00'),
			(20,3,'09:00','21:00'),
			(20,4,'09:00','21:00'),
			(20,5,'09:00','21:00'),
			(20,6,'09:00','21:00'),
			(20,7,'09:00','21:00')

insert into times
	values  ('00:00'),
			('01:00'),
			('02:00'),
			('03:00'),
			('04:00'),
			('05:00'),
			('06:00'),
			('07:00'),
			('08:00'),
			('09:00'),
			('10:00'),
			('11:00'),
			('12:00'),
			('13:00'),
			('14:00'),
			('15:00'),
			('16:00'),
			('17:00'),
			('18:00'),
			('19:00'),
			('20:00'),
			('21:00'),
			('22:00'),
			('23:00')


go